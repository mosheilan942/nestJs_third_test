version: "3.8"
services:
  mongodb:
    container_name: mongodb
    image: mongo:4.4.27-rc0-focal
    restart: always
    ports:
      - "27017:27017"
    deploy:
      replicas: 1
    networks:
      - app-network
    command: --wiredTigerCacheSizeGB 1.5
    volumes:
      - mongodata:/data/db

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    networks:
      - app-network
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data
      - ./redis.conf:/redis

  postgres:
    container_name: postgres
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=3.14159
      - POSTGRES_USER=postgres
      - POSTGRES_DB=users

  server:
    container_name: server-nestjs
    restart: always
    build:
      context: ./server
      dockerfile: Dockerfile
    develop:
      watch:
        - action: rebuild
          path: ./server/app/package.json
    ports:
      - "3000:3000"
    networks:
      - app-network
    environment:
      CONNECTION_STRING: mongodb://127.0.0.1:27017/test
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      JWT_ACCESS_SECRET: Ab3o7fU1Jfj4DaIDRuMvm6k8YU//00cqTJAocAstp5PBKQtzEUVRQCqhRwmay9dwh7MHz+kcT/RPpyc/mReSKHAa8J7TSniG7Bkze53Zys1FdtLuSRnzuCKKBv4REEaE6Fn7h/p59QQezE77C9ZdwKZvCyxtgZqFMJJSYXCYmpaKzZsZRerRcrIMky1p6oa8ZGL/bVOSRdgGI6dOO73q1rxXML2QZVBHn/RhOj9Oo4EXYxRF7jCg+yd5diD/vr42CVAaN1M9VWrmiIGzdeaAv8ojbZqWnBAmGBhR7Drza5dequ/r4r0ID6JmUQZtsKmKSZp5VqRfalDWYqKLUO6zHA==
    volumes:
      - ./server/app/dist:/server/dist
    depends_on:
      - redis
      - mongodb
      - postgres

  # client:
  #   container_name: client
  #   restart: always
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile
  #   develop:
  #     watch:
  #     - action: rebuild
  #       path: ./client/app/package.json
  #   ports:
  #     - 8000:8000
  #   tty: true
  #   networks:
  #     - app-network
  #   volumes:
  #     - type: bind
  #       source: ./client/app/src
  #       target: /client/src
  #   depends_on:
  #     - redis
  #     - mongodb
  #     - server

networks:
  app-network:

volumes:
  cache:
    driver: local
  mongodata:
